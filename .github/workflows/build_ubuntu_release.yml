name: Build Ubuntu Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  delete:
    branches:
      - main

jobs:
  build_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - uses: actions/checkout@v4
    - name: Install Go
      run: | 
        wget "https://go.dev/dl/go1.22.5.linux-amd64.tar.gz"
        sudo tar -C /usr/local -xzf "go1.22.5.linux-amd64.tar.gz"
        sudo rm -f "go1.22.5.linux-amd64.tar.gz"
        export PATH="$PATH:/usr/local/go/bin"
    - name: Setup Release
      run: ./setup_release.sh
    - name: Get Version
      id: get_version
      run: echo "VERSION=$(plum --version)" >> $GITHUB_ENV
    - name: Extract branch name
      run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
    # Step to create a release
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }}-${{ env.BRANCH_NAME }}-${{ github.sha }}
        release_name: Release ${{ env.VERSION }}-${{ env.BRANCH_NAME }}-${{ github.sha }}
        draft: false
        prerelease: false

    # Step to upload a release asset
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./plum.tar.gz
        asset_name: plum.tar.gz
        asset_content_type: application/gzip

    # Build Docker Image
    - name: Build Docker image
      run: docker build -t citro102/plum:latest .

    # Log in to DockerHub
    - name: Log in to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # Push Docker Image to DockerHub
    - name: Push Docker image to DockerHub
      run: docker push citro102/plum:latest

